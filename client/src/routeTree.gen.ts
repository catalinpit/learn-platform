/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as UnverifiedRouteImport } from './routes/unverified'
import { Route as SuccessRouteImport } from './routes/success'
import { Route as SignoutRouteImport } from './routes/signout'
import { Route as ResetPasswordRouteImport } from './routes/reset-password'
import { Route as RegisterRouteImport } from './routes/register'
import { Route as LoginRouteImport } from './routes/login'
import { Route as ForgotPasswordRouteImport } from './routes/forgot-password'
import { Route as AboutRouteImport } from './routes/about'
import { Route as AuthenticatedRouteImport } from './routes/_authenticated'
import { Route as IndexRouteImport } from './routes/index'
import { Route as CoursesCourseIdRouteImport } from './routes/courses/$courseId'
import { Route as AuthenticatedCreatorRouteRouteImport } from './routes/_authenticated/creator/route'
import { Route as AuthenticatedSettingsIndexRouteImport } from './routes/_authenticated/settings/index'
import { Route as AuthenticatedCreatorNewCourseRouteImport } from './routes/_authenticated/creator/new-course'
import { Route as AuthenticatedCreatorDashboardRouteImport } from './routes/_authenticated/creator/dashboard'
import { Route as AuthenticatedCreatorCoursesRouteImport } from './routes/_authenticated/creator/courses'
import { Route as AuthenticatedStudentCoursesIndexRouteImport } from './routes/_authenticated/student/courses/index'
import { Route as AuthenticatedCreatorCourseIdEditRouteImport } from './routes/_authenticated/creator/$courseId.edit'
import { Route as AuthenticatedStudentCoursesCourseIdIndexRouteImport } from './routes/_authenticated/student/courses/$courseId/index'
import { Route as AuthenticatedStudentCoursesCourseIdLessonsLessonIdRouteImport } from './routes/_authenticated/student/courses/$courseId/lessons/$lessonId'

const UnverifiedRoute = UnverifiedRouteImport.update({
  id: '/unverified',
  path: '/unverified',
  getParentRoute: () => rootRouteImport,
} as any)
const SuccessRoute = SuccessRouteImport.update({
  id: '/success',
  path: '/success',
  getParentRoute: () => rootRouteImport,
} as any)
const SignoutRoute = SignoutRouteImport.update({
  id: '/signout',
  path: '/signout',
  getParentRoute: () => rootRouteImport,
} as any)
const ResetPasswordRoute = ResetPasswordRouteImport.update({
  id: '/reset-password',
  path: '/reset-password',
  getParentRoute: () => rootRouteImport,
} as any)
const RegisterRoute = RegisterRouteImport.update({
  id: '/register',
  path: '/register',
  getParentRoute: () => rootRouteImport,
} as any)
const LoginRoute = LoginRouteImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRouteImport,
} as any)
const ForgotPasswordRoute = ForgotPasswordRouteImport.update({
  id: '/forgot-password',
  path: '/forgot-password',
  getParentRoute: () => rootRouteImport,
} as any)
const AboutRoute = AboutRouteImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthenticatedRoute = AuthenticatedRouteImport.update({
  id: '/_authenticated',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const CoursesCourseIdRoute = CoursesCourseIdRouteImport.update({
  id: '/courses/$courseId',
  path: '/courses/$courseId',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthenticatedCreatorRouteRoute =
  AuthenticatedCreatorRouteRouteImport.update({
    id: '/creator',
    path: '/creator',
    getParentRoute: () => AuthenticatedRoute,
  } as any)
const AuthenticatedSettingsIndexRoute =
  AuthenticatedSettingsIndexRouteImport.update({
    id: '/settings/',
    path: '/settings/',
    getParentRoute: () => AuthenticatedRoute,
  } as any)
const AuthenticatedCreatorNewCourseRoute =
  AuthenticatedCreatorNewCourseRouteImport.update({
    id: '/new-course',
    path: '/new-course',
    getParentRoute: () => AuthenticatedCreatorRouteRoute,
  } as any)
const AuthenticatedCreatorDashboardRoute =
  AuthenticatedCreatorDashboardRouteImport.update({
    id: '/dashboard',
    path: '/dashboard',
    getParentRoute: () => AuthenticatedCreatorRouteRoute,
  } as any)
const AuthenticatedCreatorCoursesRoute =
  AuthenticatedCreatorCoursesRouteImport.update({
    id: '/courses',
    path: '/courses',
    getParentRoute: () => AuthenticatedCreatorRouteRoute,
  } as any)
const AuthenticatedStudentCoursesIndexRoute =
  AuthenticatedStudentCoursesIndexRouteImport.update({
    id: '/student/courses/',
    path: '/student/courses/',
    getParentRoute: () => AuthenticatedRoute,
  } as any)
const AuthenticatedCreatorCourseIdEditRoute =
  AuthenticatedCreatorCourseIdEditRouteImport.update({
    id: '/$courseId/edit',
    path: '/$courseId/edit',
    getParentRoute: () => AuthenticatedCreatorRouteRoute,
  } as any)
const AuthenticatedStudentCoursesCourseIdIndexRoute =
  AuthenticatedStudentCoursesCourseIdIndexRouteImport.update({
    id: '/student/courses/$courseId/',
    path: '/student/courses/$courseId/',
    getParentRoute: () => AuthenticatedRoute,
  } as any)
const AuthenticatedStudentCoursesCourseIdLessonsLessonIdRoute =
  AuthenticatedStudentCoursesCourseIdLessonsLessonIdRouteImport.update({
    id: '/student/courses/$courseId/lessons/$lessonId',
    path: '/student/courses/$courseId/lessons/$lessonId',
    getParentRoute: () => AuthenticatedRoute,
  } as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/forgot-password': typeof ForgotPasswordRoute
  '/login': typeof LoginRoute
  '/register': typeof RegisterRoute
  '/reset-password': typeof ResetPasswordRoute
  '/signout': typeof SignoutRoute
  '/success': typeof SuccessRoute
  '/unverified': typeof UnverifiedRoute
  '/creator': typeof AuthenticatedCreatorRouteRouteWithChildren
  '/courses/$courseId': typeof CoursesCourseIdRoute
  '/creator/courses': typeof AuthenticatedCreatorCoursesRoute
  '/creator/dashboard': typeof AuthenticatedCreatorDashboardRoute
  '/creator/new-course': typeof AuthenticatedCreatorNewCourseRoute
  '/settings': typeof AuthenticatedSettingsIndexRoute
  '/creator/$courseId/edit': typeof AuthenticatedCreatorCourseIdEditRoute
  '/student/courses': typeof AuthenticatedStudentCoursesIndexRoute
  '/student/courses/$courseId': typeof AuthenticatedStudentCoursesCourseIdIndexRoute
  '/student/courses/$courseId/lessons/$lessonId': typeof AuthenticatedStudentCoursesCourseIdLessonsLessonIdRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/forgot-password': typeof ForgotPasswordRoute
  '/login': typeof LoginRoute
  '/register': typeof RegisterRoute
  '/reset-password': typeof ResetPasswordRoute
  '/signout': typeof SignoutRoute
  '/success': typeof SuccessRoute
  '/unverified': typeof UnverifiedRoute
  '/creator': typeof AuthenticatedCreatorRouteRouteWithChildren
  '/courses/$courseId': typeof CoursesCourseIdRoute
  '/creator/courses': typeof AuthenticatedCreatorCoursesRoute
  '/creator/dashboard': typeof AuthenticatedCreatorDashboardRoute
  '/creator/new-course': typeof AuthenticatedCreatorNewCourseRoute
  '/settings': typeof AuthenticatedSettingsIndexRoute
  '/creator/$courseId/edit': typeof AuthenticatedCreatorCourseIdEditRoute
  '/student/courses': typeof AuthenticatedStudentCoursesIndexRoute
  '/student/courses/$courseId': typeof AuthenticatedStudentCoursesCourseIdIndexRoute
  '/student/courses/$courseId/lessons/$lessonId': typeof AuthenticatedStudentCoursesCourseIdLessonsLessonIdRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/_authenticated': typeof AuthenticatedRouteWithChildren
  '/about': typeof AboutRoute
  '/forgot-password': typeof ForgotPasswordRoute
  '/login': typeof LoginRoute
  '/register': typeof RegisterRoute
  '/reset-password': typeof ResetPasswordRoute
  '/signout': typeof SignoutRoute
  '/success': typeof SuccessRoute
  '/unverified': typeof UnverifiedRoute
  '/_authenticated/creator': typeof AuthenticatedCreatorRouteRouteWithChildren
  '/courses/$courseId': typeof CoursesCourseIdRoute
  '/_authenticated/creator/courses': typeof AuthenticatedCreatorCoursesRoute
  '/_authenticated/creator/dashboard': typeof AuthenticatedCreatorDashboardRoute
  '/_authenticated/creator/new-course': typeof AuthenticatedCreatorNewCourseRoute
  '/_authenticated/settings/': typeof AuthenticatedSettingsIndexRoute
  '/_authenticated/creator/$courseId/edit': typeof AuthenticatedCreatorCourseIdEditRoute
  '/_authenticated/student/courses/': typeof AuthenticatedStudentCoursesIndexRoute
  '/_authenticated/student/courses/$courseId/': typeof AuthenticatedStudentCoursesCourseIdIndexRoute
  '/_authenticated/student/courses/$courseId/lessons/$lessonId': typeof AuthenticatedStudentCoursesCourseIdLessonsLessonIdRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/about'
    | '/forgot-password'
    | '/login'
    | '/register'
    | '/reset-password'
    | '/signout'
    | '/success'
    | '/unverified'
    | '/creator'
    | '/courses/$courseId'
    | '/creator/courses'
    | '/creator/dashboard'
    | '/creator/new-course'
    | '/settings'
    | '/creator/$courseId/edit'
    | '/student/courses'
    | '/student/courses/$courseId'
    | '/student/courses/$courseId/lessons/$lessonId'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/about'
    | '/forgot-password'
    | '/login'
    | '/register'
    | '/reset-password'
    | '/signout'
    | '/success'
    | '/unverified'
    | '/creator'
    | '/courses/$courseId'
    | '/creator/courses'
    | '/creator/dashboard'
    | '/creator/new-course'
    | '/settings'
    | '/creator/$courseId/edit'
    | '/student/courses'
    | '/student/courses/$courseId'
    | '/student/courses/$courseId/lessons/$lessonId'
  id:
    | '__root__'
    | '/'
    | '/_authenticated'
    | '/about'
    | '/forgot-password'
    | '/login'
    | '/register'
    | '/reset-password'
    | '/signout'
    | '/success'
    | '/unverified'
    | '/_authenticated/creator'
    | '/courses/$courseId'
    | '/_authenticated/creator/courses'
    | '/_authenticated/creator/dashboard'
    | '/_authenticated/creator/new-course'
    | '/_authenticated/settings/'
    | '/_authenticated/creator/$courseId/edit'
    | '/_authenticated/student/courses/'
    | '/_authenticated/student/courses/$courseId/'
    | '/_authenticated/student/courses/$courseId/lessons/$lessonId'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AuthenticatedRoute: typeof AuthenticatedRouteWithChildren
  AboutRoute: typeof AboutRoute
  ForgotPasswordRoute: typeof ForgotPasswordRoute
  LoginRoute: typeof LoginRoute
  RegisterRoute: typeof RegisterRoute
  ResetPasswordRoute: typeof ResetPasswordRoute
  SignoutRoute: typeof SignoutRoute
  SuccessRoute: typeof SuccessRoute
  UnverifiedRoute: typeof UnverifiedRoute
  CoursesCourseIdRoute: typeof CoursesCourseIdRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/unverified': {
      id: '/unverified'
      path: '/unverified'
      fullPath: '/unverified'
      preLoaderRoute: typeof UnverifiedRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/success': {
      id: '/success'
      path: '/success'
      fullPath: '/success'
      preLoaderRoute: typeof SuccessRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/signout': {
      id: '/signout'
      path: '/signout'
      fullPath: '/signout'
      preLoaderRoute: typeof SignoutRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/reset-password': {
      id: '/reset-password'
      path: '/reset-password'
      fullPath: '/reset-password'
      preLoaderRoute: typeof ResetPasswordRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/register': {
      id: '/register'
      path: '/register'
      fullPath: '/register'
      preLoaderRoute: typeof RegisterRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/forgot-password': {
      id: '/forgot-password'
      path: '/forgot-password'
      fullPath: '/forgot-password'
      preLoaderRoute: typeof ForgotPasswordRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_authenticated': {
      id: '/_authenticated'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthenticatedRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/courses/$courseId': {
      id: '/courses/$courseId'
      path: '/courses/$courseId'
      fullPath: '/courses/$courseId'
      preLoaderRoute: typeof CoursesCourseIdRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_authenticated/creator': {
      id: '/_authenticated/creator'
      path: '/creator'
      fullPath: '/creator'
      preLoaderRoute: typeof AuthenticatedCreatorRouteRouteImport
      parentRoute: typeof AuthenticatedRoute
    }
    '/_authenticated/settings/': {
      id: '/_authenticated/settings/'
      path: '/settings'
      fullPath: '/settings'
      preLoaderRoute: typeof AuthenticatedSettingsIndexRouteImport
      parentRoute: typeof AuthenticatedRoute
    }
    '/_authenticated/creator/new-course': {
      id: '/_authenticated/creator/new-course'
      path: '/new-course'
      fullPath: '/creator/new-course'
      preLoaderRoute: typeof AuthenticatedCreatorNewCourseRouteImport
      parentRoute: typeof AuthenticatedCreatorRouteRoute
    }
    '/_authenticated/creator/dashboard': {
      id: '/_authenticated/creator/dashboard'
      path: '/dashboard'
      fullPath: '/creator/dashboard'
      preLoaderRoute: typeof AuthenticatedCreatorDashboardRouteImport
      parentRoute: typeof AuthenticatedCreatorRouteRoute
    }
    '/_authenticated/creator/courses': {
      id: '/_authenticated/creator/courses'
      path: '/courses'
      fullPath: '/creator/courses'
      preLoaderRoute: typeof AuthenticatedCreatorCoursesRouteImport
      parentRoute: typeof AuthenticatedCreatorRouteRoute
    }
    '/_authenticated/student/courses/': {
      id: '/_authenticated/student/courses/'
      path: '/student/courses'
      fullPath: '/student/courses'
      preLoaderRoute: typeof AuthenticatedStudentCoursesIndexRouteImport
      parentRoute: typeof AuthenticatedRoute
    }
    '/_authenticated/creator/$courseId/edit': {
      id: '/_authenticated/creator/$courseId/edit'
      path: '/$courseId/edit'
      fullPath: '/creator/$courseId/edit'
      preLoaderRoute: typeof AuthenticatedCreatorCourseIdEditRouteImport
      parentRoute: typeof AuthenticatedCreatorRouteRoute
    }
    '/_authenticated/student/courses/$courseId/': {
      id: '/_authenticated/student/courses/$courseId/'
      path: '/student/courses/$courseId'
      fullPath: '/student/courses/$courseId'
      preLoaderRoute: typeof AuthenticatedStudentCoursesCourseIdIndexRouteImport
      parentRoute: typeof AuthenticatedRoute
    }
    '/_authenticated/student/courses/$courseId/lessons/$lessonId': {
      id: '/_authenticated/student/courses/$courseId/lessons/$lessonId'
      path: '/student/courses/$courseId/lessons/$lessonId'
      fullPath: '/student/courses/$courseId/lessons/$lessonId'
      preLoaderRoute: typeof AuthenticatedStudentCoursesCourseIdLessonsLessonIdRouteImport
      parentRoute: typeof AuthenticatedRoute
    }
  }
}

interface AuthenticatedCreatorRouteRouteChildren {
  AuthenticatedCreatorCoursesRoute: typeof AuthenticatedCreatorCoursesRoute
  AuthenticatedCreatorDashboardRoute: typeof AuthenticatedCreatorDashboardRoute
  AuthenticatedCreatorNewCourseRoute: typeof AuthenticatedCreatorNewCourseRoute
  AuthenticatedCreatorCourseIdEditRoute: typeof AuthenticatedCreatorCourseIdEditRoute
}

const AuthenticatedCreatorRouteRouteChildren: AuthenticatedCreatorRouteRouteChildren =
  {
    AuthenticatedCreatorCoursesRoute: AuthenticatedCreatorCoursesRoute,
    AuthenticatedCreatorDashboardRoute: AuthenticatedCreatorDashboardRoute,
    AuthenticatedCreatorNewCourseRoute: AuthenticatedCreatorNewCourseRoute,
    AuthenticatedCreatorCourseIdEditRoute:
      AuthenticatedCreatorCourseIdEditRoute,
  }

const AuthenticatedCreatorRouteRouteWithChildren =
  AuthenticatedCreatorRouteRoute._addFileChildren(
    AuthenticatedCreatorRouteRouteChildren,
  )

interface AuthenticatedRouteChildren {
  AuthenticatedCreatorRouteRoute: typeof AuthenticatedCreatorRouteRouteWithChildren
  AuthenticatedSettingsIndexRoute: typeof AuthenticatedSettingsIndexRoute
  AuthenticatedStudentCoursesIndexRoute: typeof AuthenticatedStudentCoursesIndexRoute
  AuthenticatedStudentCoursesCourseIdIndexRoute: typeof AuthenticatedStudentCoursesCourseIdIndexRoute
  AuthenticatedStudentCoursesCourseIdLessonsLessonIdRoute: typeof AuthenticatedStudentCoursesCourseIdLessonsLessonIdRoute
}

const AuthenticatedRouteChildren: AuthenticatedRouteChildren = {
  AuthenticatedCreatorRouteRoute: AuthenticatedCreatorRouteRouteWithChildren,
  AuthenticatedSettingsIndexRoute: AuthenticatedSettingsIndexRoute,
  AuthenticatedStudentCoursesIndexRoute: AuthenticatedStudentCoursesIndexRoute,
  AuthenticatedStudentCoursesCourseIdIndexRoute:
    AuthenticatedStudentCoursesCourseIdIndexRoute,
  AuthenticatedStudentCoursesCourseIdLessonsLessonIdRoute:
    AuthenticatedStudentCoursesCourseIdLessonsLessonIdRoute,
}

const AuthenticatedRouteWithChildren = AuthenticatedRoute._addFileChildren(
  AuthenticatedRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AuthenticatedRoute: AuthenticatedRouteWithChildren,
  AboutRoute: AboutRoute,
  ForgotPasswordRoute: ForgotPasswordRoute,
  LoginRoute: LoginRoute,
  RegisterRoute: RegisterRoute,
  ResetPasswordRoute: ResetPasswordRoute,
  SignoutRoute: SignoutRoute,
  SuccessRoute: SuccessRoute,
  UnverifiedRoute: UnverifiedRoute,
  CoursesCourseIdRoute: CoursesCourseIdRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
